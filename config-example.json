{
    "basic_config": {
        "critical_cpu_percent": 90.0,
        "warning_cpu_percent": 80.0,
        "critical_ram_percent": 90.0,
        "warning_ram_percent": 80.0,
        "critical_swap_percent": 90.0,
        "warning_swap_percent": 80.0,
        "critical_temperature_celsius": 80.0,
        "warning_temperature_celsius": 70.0,
        "critical_uptime_seconds": 600,
        "warning_uptime_seconds": 3600,
        "excluded_interfaces": [
            "lo",
            "docker0",
            "^veth(.*)$",
            "^br-(.*)$"
        ]
    },
    "scheduled_tasks_check_for_issues": {
        "max_duration_seconds_showing_same_error": 36000,
        "start_immediately": true,
        "duration_in_sec_wait_between_each_execution": 1800
    },
    "scheduled_tasks_show_infos": {
        "start_immediately": false,
        "duration_in_sec_wait_between_each_execution": 86400
    },
    "pings": [
        {
            "website": "google.com",
            "display_name": "Google",
            "timeout_in_sec": 5
        },
        {
            "website": "www.google.com",
            "display_name": "Google (WWW)",
            "timeout_in_sec": 5
        },
        {
            "website": "123.123.123.123",
            "display_name": "A great dummy IP",
            "timeout_in_sec": 5
        }
    ],
    "websites": [
        {
            "url": "https://google.com",
            "display_name": "Google",
            "timeout_in_sec": 5,
            "show_content_if_issue": true,
            "service_name_to_restart": "web"
        },
        {
            "url": "https://mock.codes/404",
            "display_name": "Example 404 not allowed website",
            "timeout_in_sec": 5
        },
        {
            "url": "https://mock.codes/401",
            "display_name": "Example 401 allowed website",
            "additional_allowed_statuses": [401],
            "timeout_in_sec": 5
        },
        {
            "url": "https://postman-echo.com/basic-auth",
            "display_name": "Basic auth website",
            "auth_type": "basic",
            "username": "postman",
            "password": "password",
            "timeout_in_sec": 5
        },
        {
            "url": "https://postman-echo.com/bearer-auth",
            "display_name": "Bearer auth website (no mock, will fail)",
            "auth_type": "bearer",
            "token": "12345678901234567890",
            "timeout_in_sec": 5
        }
    ],
    "disks": [
        {
            "device": "/",
            "display_name": "Main hard drive",
            "warning_percent": 60,
            "critical_percent": 80
        },
        {
            "device": "/boot",
            "display_name": "Boot drive",
            "warning_percent": 60,
            "critical_percent": 80
        }
    ],
    "folders": [
        {
            "folder_path": "/var/www/",
            "display_name": "Base apache folder",
            "warning_usage_giga": 20,
            "critical_usage_giga": 100
        },
        {
            "folder_path": "/var/log/",
            "display_name": "Log folder",
            "warning_usage_giga": 15,
            "critical_usage_giga": 40
        }
    ],
    "services":
    {
        "web": {
            "display_name": "Web server (Apache)",
            "restart_command": "sudo /etc/init.d/apache2 restart",
            "status_command": "sudo /etc/init.d/apache2 status",
            "timeout_in_sec": 30,
            "auto_restart": true
        },
        "sql": {
            "display_name": "SQL server (MariaDB)",
            "restart_command": "sudo /etc/init.d/mariadb restart",
            "status_command": "sudo /etc/init.d/mariadb status",
            "timeout_in_sec": 30,
            "auto_restart": true
        },
        "rdp": {
            "display_name": "RDP (xrdp)",
            "restart_command": "sudo systemctl restart xrdp",
            "stop_command": "sudo systemctl stop xrdp",
            "status_command": "sudo systemctl is-active xrdp",
            "timeout_in_sec": 30,
            "auto_restart": false
        }
    },
    "certificates": [
        {
            "website": "amazon.com",
            "display_name": "Example of valid certificate",
            "warning_remaining_days": 15,
            "critical_remaining_days": 5
        },
        {
            "website": "www.amazon.com",
            "display_name": "Example of requested 4000 days certificate (for error catching example only)",
            "warning_remaining_days": 8000,
            "critical_remaining_days": 4000
        },
        {
            "website": "expired.badssl.com",
            "display_name": "Example of expired certificate (considered invalid)",
            "warning_remaining_days": 15,
            "critical_remaining_days": 5
        },
        {
            "website": "self-signed.badssl.com",
            "display_name": "Example of self-signed certificate (considered invalid)",
            "warning_remaining_days": 15,
            "critical_remaining_days": 5
        }
    ],
    "recent_user_connections": {
        "allow_all": false,
        "max_days": 30,
        "allowed_ips": [
            "111.222.111.222",
            "123.123.123.123"
        ]
    },
    "ports": [
        {
            "port": 80,
            "host": "localhost",
            "display_name": "Web server (unsecured)",
            "want_port_to_be_open": true,
            "service_name_to_restart": "web",
            "timeout_in_sec": 5
        },
        {
            "port": 443,
            "host": "localhost",
            "display_name": "Web server (ecured)",
            "want_port_to_be_open": true,
            "service_name_to_restart": "web",
            "timeout_in_sec": 5
        },
        {
            "port": 3306,
            "host": "localhost",
            "display_name": "SQL Server (internal)",
            "want_port_to_be_open": true,
            "service_name_to_restart": "sql",
            "timeout_in_sec": 10
        },
        {
            "port": 3389,
            "host": "localhost",
            "display_name": "RDP",
            "want_port_to_be_open": true,
            "service_name_to_restart": "rdp",
            "timeout_in_sec": 10
        }
    ],
    "commands":
    {
        "banned_ips": {
            "display_name": "IP bannies",
            "command": "sudo fail2ban-client banned",
            "is_private": true,
            "show_content_if_success": true,
            "show_content_if_issue": true,
            "is_content_json": true,
            "execute_in_scheduled_tasks_for_issues": false,
            "execute_in_scheduled_tasks_for_infos": true,
            "timeout_in_sec": 60
        },
        "update": {
            "display_name": "Update 1/3 (Package update)",
            "command": "sudo /usr/bin/apt-get update -q >/dev/null && { output=$(/usr/bin/apt list --upgradable 2>/dev/null | /usr/bin/grep -E 'upgradable from'); if [ -z \"$output\" ]; then /usr/bin/echo \"Packages already updated\"; else /usr/bin/echo \"$output\"; fi; }",
            "is_private": true,
            "show_content_if_success": true,
            "show_content_if_issue": true,
            "execute_in_scheduled_tasks_for_issues": false,
            "execute_in_scheduled_tasks_for_infos": true,
            "timeout_in_sec": 1200
        },
        "upgrade": {
            "display_name": "Update 2/3 (Package upgrade)",
            "command": "sudo /usr/bin/apt-get -q -y upgrade >&1 | /usr/bin/grep -E '^[0-9]+ upgraded,(.*)$'",
            "is_private": true,
            "show_content_if_success": true,
            "show_content_if_issue": true,
            "execute_in_scheduled_tasks_for_issues": false,
            "execute_in_scheduled_tasks_for_infos": true,
            "timeout_in_sec": 1200
        },
        "dpkg": {
            "display_name": "Update 3/3 (Configure debian packages)",
            "command": "sudo /usr/bin/dpkg --configure -a",
            "is_private": true,
            "show_content_if_success": true,
            "show_content_if_issue": true,
            "execute_in_scheduled_tasks_for_issues": false,
            "execute_in_scheduled_tasks_for_infos": true,
            "timeout_in_sec": 1200
        },
        "certificates": {
            "display_name": "Renouvellement certificats",
            "command": "output=$(sudo /usr/bin/certbot renew --quiet --renew-hook '/usr/bin/echo \"\\nCertificat ${RENEWED_LINEAGE} mis à jour (ce qui met à jour les noms de domaines suivants: ${RENEWED_DOMAINS})\\n\" >&2'); if [[ -n \"$output\" ]]; then /usr/bin/echo \"Service FTP relancé car dépend des certificats\"; sudo /etc/init.d/proftpd restart >/dev/null 2>&1; else /usr/bin/echo \"All certificates are already up to date\"; fi",
            "is_private": true,
            "show_content_if_success": true,
            "show_content_if_issue": true,
            "execute_in_scheduled_tasks_for_issues": false,
            "execute_in_scheduled_tasks_for_infos": true,
            "timeout_in_sec": 1200
        }
    }
}
